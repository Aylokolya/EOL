<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.dao.ItemMapper">
  <resultMap id="BaseResultMap" type="com.demo.entity.Item">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="qid" jdbcType="INTEGER" property="qid" />
    <result column="itema" jdbcType="VARCHAR" property="itema" />
    <result column="itemb" jdbcType="VARCHAR" property="itemb" />
    <result column="itemc" jdbcType="VARCHAR" property="itemc" />
    <result column="itemd" jdbcType="VARCHAR" property="itemd" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, qid, itema, itemb, itemc, itemd
  </sql>
  <select id="selectByExample" parameterType="com.demo.entity.ItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from item
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from item
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.demo.entity.ItemExample">
    delete from item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.demo.entity.Item" keyProperty="id" keyColumn="id" useGeneratedKeys="true">
    insert into item (id, qid, itema, 
      itemb, itemc, itemd
      )
    values (#{id,jdbcType=INTEGER}, #{qid,jdbcType=INTEGER}, #{itema,jdbcType=VARCHAR}, 
      #{itemb,jdbcType=VARCHAR}, #{itemc,jdbcType=VARCHAR}, #{itemd,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.demo.entity.Item">
    insert into item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="qid != null">
        qid,
      </if>
      <if test="itema != null">
        itema,
      </if>
      <if test="itemb != null">
        itemb,
      </if>
      <if test="itemc != null">
        itemc,
      </if>
      <if test="itemd != null">
        itemd,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="qid != null">
        #{qid,jdbcType=INTEGER},
      </if>
      <if test="itema != null">
        #{itema,jdbcType=VARCHAR},
      </if>
      <if test="itemb != null">
        #{itemb,jdbcType=VARCHAR},
      </if>
      <if test="itemc != null">
        #{itemc,jdbcType=VARCHAR},
      </if>
      <if test="itemd != null">
        #{itemd,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.demo.entity.ItemExample" resultType="java.lang.Long">
    select count(*) from item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update item
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=INTEGER},
      </if>
      <if test="row.qid != null">
        qid = #{row.qid,jdbcType=INTEGER},
      </if>
      <if test="row.itema != null">
        itema = #{row.itema,jdbcType=VARCHAR},
      </if>
      <if test="row.itemb != null">
        itemb = #{row.itemb,jdbcType=VARCHAR},
      </if>
      <if test="row.itemc != null">
        itemc = #{row.itemc,jdbcType=VARCHAR},
      </if>
      <if test="row.itemd != null">
        itemd = #{row.itemd,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update item
    set id = #{row.id,jdbcType=INTEGER},
      qid = #{row.qid,jdbcType=INTEGER},
      itema = #{row.itema,jdbcType=VARCHAR},
      itemb = #{row.itemb,jdbcType=VARCHAR},
      itemc = #{row.itemc,jdbcType=VARCHAR},
      itemd = #{row.itemd,jdbcType=VARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.demo.entity.Item">
    update item
    <set>
      <if test="qid != null">
        qid = #{qid,jdbcType=INTEGER},
      </if>
      <if test="itema != null">
        itema = #{itema,jdbcType=VARCHAR},
      </if>
      <if test="itemb != null">
        itemb = #{itemb,jdbcType=VARCHAR},
      </if>
      <if test="itemc != null">
        itemc = #{itemc,jdbcType=VARCHAR},
      </if>
      <if test="itemd != null">
        itemd = #{itemd,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.demo.entity.Item">
    update item
    set qid = #{qid,jdbcType=INTEGER},
      itema = #{itema,jdbcType=VARCHAR},
      itemb = #{itemb,jdbcType=VARCHAR},
      itemc = #{itemc,jdbcType=VARCHAR},
      itemd = #{itemd,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>